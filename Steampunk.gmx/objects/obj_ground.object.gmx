<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ground</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_BasicFloor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing variables
image_speed = 0;
image_index = 0;

left = instance_place(x-32,y,obj_ground);
right = instance_place(x+32,y,obj_ground);
top = instance_place(x,y-32,obj_ground);
bot = instance_place(x,y+32,obj_ground);
topleft = instance_place(x-32,y-32,obj_ground);
topright = instance_place(x+32,y-32,obj_ground);
botleft = instance_place(x-32,y+32,obj_ground);
botright = instance_place(x+32,y+32,obj_ground);
if (y + 33) &gt; room_height {
    bottom = true;
} else {
    bottom = false;
}
if top and left and not topleft {
    image_index = 8;
}
if top and right and not topright {
    image_index = 9;
}
if left and right and top and topleft and topright{
    image_index = 0;
}
if left and right and not top {
    image_index = 1;
}
if not left and right and not top {
    image_index = 2;
}
if left and not right and not top {
    image_index = 3;
}
if not left and right and top {
    image_index = 4;
}
if left and not right and top {
    image_index = 5;
}
if not left and not right and top {
    image_index = 6;
}
if not left and not right and not top {
    image_index = 7;
}

if left and right and top and topleft and topright and bot and botleft and botright {
    image_index = 10;
}
if bottom and top and topleft and topright image_index = 10;

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if top.image_index &gt;= 10 and left.image_index &gt;= 10
and right.image_index &gt;= 10 and bot.image_index &gt;= 10 
and topleft.image_index &gt;= 10 and topright.image_index &gt;= 10
and botleft.image_index &gt;= 10 and botright.image_index &gt;= 10 {
    image_index = 11;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
