<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slime</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>parent_Mob</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
hsp = 0;
facing = choose(-1,1); //-1 = left 1 = right
movespeed = 1;
jumpchance = 100 //Percent
jumpspeed = 5;
grav = .3;
hp = 9;
damage = 10;
close = false;
w = sprite_width / 2;
seerange = 110;
stoprange = w;
fleerange = 0;
see = false;
image_index = 0;
image_speed = 0;

// 0 = melee | 1 = range
attack_type = 0;
attackrange = 5;
attackdelay = 60;
canattack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attackdelay
canattack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI movement
if distance_to_object(obj_MChar) &lt; seerange {
    see = true;
    
} else {
    see = false;
}
if see = true {
    if x &lt; obj_MChar.x facing = 1;
    if x &gt; obj_MChar.x facing = -1;
} else {
    if random(150) &lt; 1 and place_meeting(x,y+1,obj_BasicFloor) facing *= -1;
}
if place_meeting(x,y+1,obj_BasicFloor) {
    image_index = 0;
}
//Jumping
if random(100) &lt; jumpchance and place_meeting(x,y+1,obj_BasicFloor) {
    vsp = -jumpspeed;
    image_index = 2;
    alarm[1] = 5;
}
hsp = facing * movespeed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement logic

if obj_MChar.x - x &lt; stoprange and obj_MChar.x - x &gt; -stoprange {
    close = true;
} else close = false;

if obj_MChar.x - x &lt; fleerange and obj_MChar.x - x &gt; -fleerange {
    flee = true;
} else flee = false;

if close = true hsp = 0;

if flee = true {
    hsp = facing * -movespeed;
}

if hsp &gt; 0 image_xscale = 1;
if hsp &lt; 0 image_xscale = -1;

//horisontal collision
if (place_meeting(x+hsp,y,obj_BasicFloor)) {
    while(!place_meeting(x+sign(hsp),y,obj_BasicFloor)) {
        x += sign(hsp);
    }
    hsp = 0;
}
//x += hsp;
hspeed = hsp;


//vertical collision
if (vsp &lt; 10) vsp += grav;
if (place_meeting(x,y+vsp,obj_BasicFloor)) {
    while(!place_meeting(x,y+sign(vsp),obj_BasicFloor)) {
        y += sign(vsp);
    }
    vsp = 0;
}
//y += vsp;
vspeed = vsp;

if hsp = 0 and place_meeting(x,y+1,obj_BasicFloor) and see = true and (close = false or flee = true) {
    vsp = -jumpspeed;
}
if hsp = 0 and place_meeting(x,y+1,obj_BasicFloor) and see = false {
    facing *= -1;
}
/*if hsp = 0 and facing = 1 {
    facing = -1;
} else if hsp = 0 and facing = -1 {
    facing = 1;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dieing

if hp &lt;= 0 {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attacking

/*hit = instance_place(x,y,obj_MChar);

if hit != noone {
    hit.hp -= damage;
    //audio_play_sound(snd_BulletHit,1,0);
}
*/

hit = distance_to_object(obj_MChar);

if hit &lt;= attackrange and canattack = true {
    obj_MChar.incoming_dmg += damage;
    canattack = false;
    alarm[0] = attackdelay;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
